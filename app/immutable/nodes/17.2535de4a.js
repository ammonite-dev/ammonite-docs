import{S as Q,i as U,s as X,k as p,q as g,a as h,y as z,l as d,m as f,r as y,h as o,c as _,z as Y,n as O,b as w,C as a,A as j,g as F,d as G,B as J,D as Z}from"../chunks/index.98343197.js";import{c as ee}from"../chunks/syntax.d8b6a914.js";import{E as te}from"../chunks/ErrorAlert.db67bbe1.js";import{R as ae,T as $}from"../chunks/table.f401c414.js";function se(v){let e,i,m,c,r;return{c(){e=p("div"),i=g("Work In Progress"),m=h(),c=p("div"),r=g(`Tables are a bit more complicated to implement. Especially a layout that is mobile friendly.
			Many things may be broken.`),this.h()},l(s){e=d(s,"DIV",{class:!0});var n=f(e);i=y(n,"Work In Progress"),n.forEach(o),m=_(s),c=d(s,"DIV",{});var E=f(c);r=y(E,`Tables are a bit more complicated to implement. Especially a layout that is mobile friendly.
			Many things may be broken.`),E.forEach(o),this.h()},h(){O(e,"class","font-bold text-xl")},m(s,n){w(s,e,n),a(e,i),w(s,m,n),w(s,c,n),a(c,r)},p:Z,d(s){s&&o(e),s&&o(m),s&&o(c)}}}function oe(v){let e,i,m,c,r,s,n,E,I,T,L,P,x,A,K=ee("markdown",`| Option | Description |
| ------ | ----------- |
| data   | path to data files to supply the data that will be passed into templates. |
| engine | engine to be used for processing templates. Handlebars is the default. |
| ext    | extension to be used for dest files. |`)+"",S,D,k,M,b,u,H;return r=new te({props:{$$slots:{default:[se]},$$scope:{ctx:v}}}),u=new ae({props:{tableHeaders:v[0],tableRows:v[1]}}),{c(){e=p("div"),i=p("h1"),m=g("Tables"),c=h(),z(r.$$.fragment),s=h(),n=p("p"),E=g("Tables are often useful for grouping categories of data"),I=h(),T=p("h4"),L=g("Example Input"),P=h(),x=p("pre"),A=p("code"),S=h(),D=p("h4"),k=g("Example Output"),M=h(),b=p("div"),z(u.$$.fragment),this.h()},l(l){e=d(l,"DIV",{class:!0});var t=f(e);i=d(t,"H1",{});var R=f(i);m=y(R,"Tables"),R.forEach(o),c=_(t),Y(r.$$.fragment,t),s=_(t),n=d(t,"P",{});var B=f(n);E=y(B,"Tables are often useful for grouping categories of data"),B.forEach(o),I=_(t),T=d(t,"H4",{});var C=f(T);L=y(C,"Example Input"),C.forEach(o),P=_(t),x=d(t,"PRE",{});var V=f(x);A=d(V,"CODE",{});var N=f(A);N.forEach(o),V.forEach(o),S=_(t),D=d(t,"H4",{});var q=f(D);k=y(q,"Example Output"),q.forEach(o),M=_(t),b=d(t,"DIV",{class:!0});var W=f(b);Y(u.$$.fragment,W),W.forEach(o),t.forEach(o),this.h()},h(){O(b,"class","article_preview"),O(e,"class","tech_doc")},m(l,t){w(l,e,t),a(e,i),a(i,m),a(e,c),j(r,e,null),a(e,s),a(e,n),a(n,E),a(e,I),a(e,T),a(T,L),a(e,P),a(e,x),a(x,A),A.innerHTML=K,a(e,S),a(e,D),a(D,k),a(e,M),a(e,b),j(u,b,null),H=!0},p(l,[t]){const R={};t&4&&(R.$$scope={dirty:t,ctx:l}),r.$set(R)},i(l){H||(F(r.$$.fragment,l),F(u.$$.fragment,l),H=!0)},o(l){G(r.$$.fragment,l),G(u.$$.fragment,l),H=!1},d(l){l&&o(e),J(r),J(u)}}}function le(v){return[["Option","Description"],[[{classes:$,value:"data"},{classes:$,value:"path to data files to supply the data that will be passed into templates."}],[{classes:$,value:"engine"},{classes:$,value:"engine to be used for processing templates. Handlebars is the default."}],[{classes:$,value:"ext"},{classes:$,value:"extension to be used for dest files."}]]]}class pe extends Q{constructor(e){super(),U(this,e,le,oe,X,{})}}export{pe as component};
