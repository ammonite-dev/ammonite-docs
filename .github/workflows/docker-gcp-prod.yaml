---
name: Docker CI

on:
  push:
    branches:
      - main

jobs:
  build-docker-image:
    name: Build docker and push to registry
    runs-on: ubuntu-latest
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
      SERVICE_ACCOUNT: ${{ vars.SERVICE_ACCOUNT }}
      DOCKER_REGISTRY: ${{ vars.DOCKER_REGISTRY }}
      ARTIFACT_REPOSITORY: ${{ vars.ARTIFACT_REPOSITORY_PROD }}
      PROJECT_ID: ${{ vars.PROJECT_ID }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}
      IMAGE_PATH: ${{ vars.DOCKER_REGISTRY }}/${{ vars.PROJECT_ID }}/${{ vars.ARTIFACT_REPOSITORY_PROD }}/${{ vars.IMAGE_NAME }}:latest

    environment: production
    defaults:
      run:
        shell: bash
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          token_format: 'access_token'
          credentials_json: ${{ env.GOOGLE_CREDENTIALS }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.DOCKER_REGISTRY }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: docker tagging
        id: meta
        uses: docker/metadata-action@v4
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ env.IMAGE_NAME }}
          flavor: |
            latest=true

      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2

      - name: build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: |
            ${{ steps.meta.outputs.flavor }}
            ${{ env.IMAGE_PATH }}

      - name: deploy image to cloud run
        id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v1'
        with:
          service: ${{ env.IMAGE_NAME }}
          image: ${{ env.IMAGE_PATH }}
